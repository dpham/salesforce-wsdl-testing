package com.sforce.soap.partner;

/**
 * Generated by ComplexTypeGenerator.java. Please do not edit.
 */
public class SyncOfflineDataResult implements com.sforce.ws.bind.XMLizable {

  /**
   * Constructor
   */
  public SyncOfflineDataResult() {
  }
    
  
  /**
   * element  : lastConfigChange of type {http://www.w3.org/2001/XMLSchema}dateTime
   * java type: java.util.Calendar
   */
  private static final com.sforce.ws.bind.TypeInfo lastConfigChange__typeInfo =
    new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","lastConfigChange","http://www.w3.org/2001/XMLSchema","dateTime",1,1,true);

  private boolean lastConfigChange__is_set = false;

  private java.util.Calendar lastConfigChange;

  public java.util.Calendar getLastConfigChange() {
    return lastConfigChange;
  }

  

  public void setLastConfigChange(java.util.Calendar lastConfigChange) {
    this.lastConfigChange = lastConfigChange;
    lastConfigChange__is_set = true;
  }
  
  /**
   * element  : lastFullQuery of type {http://www.w3.org/2001/XMLSchema}dateTime
   * java type: java.util.Calendar
   */
  private static final com.sforce.ws.bind.TypeInfo lastFullQuery__typeInfo =
    new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","lastFullQuery","http://www.w3.org/2001/XMLSchema","dateTime",1,1,true);

  private boolean lastFullQuery__is_set = false;

  private java.util.Calendar lastFullQuery;

  public java.util.Calendar getLastFullQuery() {
    return lastFullQuery;
  }

  

  public void setLastFullQuery(java.util.Calendar lastFullQuery) {
    this.lastFullQuery = lastFullQuery;
    lastFullQuery__is_set = true;
  }
  
  /**
   * element  : lastQuery of type {http://www.w3.org/2001/XMLSchema}dateTime
   * java type: java.util.Calendar
   */
  private static final com.sforce.ws.bind.TypeInfo lastQuery__typeInfo =
    new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","lastQuery","http://www.w3.org/2001/XMLSchema","dateTime",1,1,true);

  private boolean lastQuery__is_set = false;

  private java.util.Calendar lastQuery;

  public java.util.Calendar getLastQuery() {
    return lastQuery;
  }

  

  public void setLastQuery(java.util.Calendar lastQuery) {
    this.lastQuery = lastQuery;
    lastQuery__is_set = true;
  }
  
  /**
   * element  : lastReset of type {http://www.w3.org/2001/XMLSchema}dateTime
   * java type: java.util.Calendar
   */
  private static final com.sforce.ws.bind.TypeInfo lastReset__typeInfo =
    new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","lastReset","http://www.w3.org/2001/XMLSchema","dateTime",1,1,true);

  private boolean lastReset__is_set = false;

  private java.util.Calendar lastReset;

  public java.util.Calendar getLastReset() {
    return lastReset;
  }

  

  public void setLastReset(java.util.Calendar lastReset) {
    this.lastReset = lastReset;
    lastReset__is_set = true;
  }
  
  /**
   * element  : removed of type {urn:partner.soap.sforce.com}ID
   * java type: java.lang.String[]
   */
  private static final com.sforce.ws.bind.TypeInfo removed__typeInfo =
    new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","removed","urn:partner.soap.sforce.com","ID",0,-1,true);

  private boolean removed__is_set = false;

  private java.lang.String[] removed = new java.lang.String[0];

  public java.lang.String[] getRemoved() {
    return removed;
  }

  

  public void setRemoved(java.lang.String[] removed) {
    this.removed = removed;
    removed__is_set = true;
  }
  
  /**
   * element  : timestamp of type {http://www.w3.org/2001/XMLSchema}dateTime
   * java type: java.util.Calendar
   */
  private static final com.sforce.ws.bind.TypeInfo timestamp__typeInfo =
    new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","timestamp","http://www.w3.org/2001/XMLSchema","dateTime",1,1,true);

  private boolean timestamp__is_set = false;

  private java.util.Calendar timestamp;

  public java.util.Calendar getTimestamp() {
    return timestamp;
  }

  

  public void setTimestamp(java.util.Calendar timestamp) {
    this.timestamp = timestamp;
    timestamp__is_set = true;
  }
  
  /**
   * element  : token of type {http://www.w3.org/2001/XMLSchema}string
   * java type: java.lang.String
   */
  private static final com.sforce.ws.bind.TypeInfo token__typeInfo =
    new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","token","http://www.w3.org/2001/XMLSchema","string",1,1,true);

  private boolean token__is_set = false;

  private java.lang.String token;

  public java.lang.String getToken() {
    return token;
  }

  

  public void setToken(java.lang.String token) {
    this.token = token;
    token__is_set = true;
  }
  
  /**
   * element  : updates of type {urn:partner.soap.sforce.com}QueryResult
   * java type: com.sforce.soap.partner.QueryResult
   */
  private static final com.sforce.ws.bind.TypeInfo updates__typeInfo =
    new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","updates","urn:partner.soap.sforce.com","QueryResult",1,1,true);

  private boolean updates__is_set = false;

  private com.sforce.soap.partner.QueryResult updates;

  public com.sforce.soap.partner.QueryResult getUpdates() {
    return updates;
  }

  

  public void setUpdates(com.sforce.soap.partner.QueryResult updates) {
    this.updates = updates;
    updates__is_set = true;
  }
  

  /**
   */
  public void write(javax.xml.namespace.QName __element,
      com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
      throws java.io.IOException {
    __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
    
    writeFields(__out, __typeMapper);
    __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
  }

  protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
      com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
   
    __typeMapper.writeObject(__out, lastConfigChange__typeInfo, lastConfigChange, lastConfigChange__is_set);
    __typeMapper.writeObject(__out, lastFullQuery__typeInfo, lastFullQuery, lastFullQuery__is_set);
    __typeMapper.writeObject(__out, lastQuery__typeInfo, lastQuery, lastQuery__is_set);
    __typeMapper.writeObject(__out, lastReset__typeInfo, lastReset, lastReset__is_set);
    __typeMapper.writeObject(__out, removed__typeInfo, removed, removed__is_set);
    __typeMapper.writeObject(__out, timestamp__typeInfo, timestamp, timestamp__is_set);
    __typeMapper.writeString(__out, token__typeInfo, token, token__is_set);
    __typeMapper.writeObject(__out, updates__typeInfo, updates, updates__is_set);
  }


  public void load(com.sforce.ws.parser.XmlInputStream __in,
      com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
    __typeMapper.consumeStartTag(__in);
    loadFields(__in, __typeMapper);
    __typeMapper.consumeEndTag(__in);
  }

  protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
      com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
   
    __in.peekTag();
    if (__typeMapper.verifyElement(__in, lastConfigChange__typeInfo)) {
      setLastConfigChange((java.util.Calendar)__typeMapper.readObject(__in, lastConfigChange__typeInfo, java.util.Calendar.class));
    }
    __in.peekTag();
    if (__typeMapper.verifyElement(__in, lastFullQuery__typeInfo)) {
      setLastFullQuery((java.util.Calendar)__typeMapper.readObject(__in, lastFullQuery__typeInfo, java.util.Calendar.class));
    }
    __in.peekTag();
    if (__typeMapper.verifyElement(__in, lastQuery__typeInfo)) {
      setLastQuery((java.util.Calendar)__typeMapper.readObject(__in, lastQuery__typeInfo, java.util.Calendar.class));
    }
    __in.peekTag();
    if (__typeMapper.verifyElement(__in, lastReset__typeInfo)) {
      setLastReset((java.util.Calendar)__typeMapper.readObject(__in, lastReset__typeInfo, java.util.Calendar.class));
    }
    __in.peekTag();
    if (__typeMapper.isElement(__in, removed__typeInfo)) {
      setRemoved((java.lang.String[])__typeMapper.readObject(__in, removed__typeInfo, java.lang.String[].class));
    }
    __in.peekTag();
    if (__typeMapper.verifyElement(__in, timestamp__typeInfo)) {
      setTimestamp((java.util.Calendar)__typeMapper.readObject(__in, timestamp__typeInfo, java.util.Calendar.class));
    }
    __in.peekTag();
    if (__typeMapper.verifyElement(__in, token__typeInfo)) {
      setToken((java.lang.String)__typeMapper.readString(__in, token__typeInfo, java.lang.String.class));
    }
    __in.peekTag();
    if (__typeMapper.verifyElement(__in, updates__typeInfo)) {
      setUpdates((com.sforce.soap.partner.QueryResult)__typeMapper.readObject(__in, updates__typeInfo, com.sforce.soap.partner.QueryResult.class));
    }
  }

  public String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder();
    sb.append("[SyncOfflineDataResult ");
    
    sb.append(" lastConfigChange=");
    sb.append("'"+com.sforce.ws.util.Verbose.toString(lastConfigChange)+"'\n");
    sb.append(" lastFullQuery=");
    sb.append("'"+com.sforce.ws.util.Verbose.toString(lastFullQuery)+"'\n");
    sb.append(" lastQuery=");
    sb.append("'"+com.sforce.ws.util.Verbose.toString(lastQuery)+"'\n");
    sb.append(" lastReset=");
    sb.append("'"+com.sforce.ws.util.Verbose.toString(lastReset)+"'\n");
    sb.append(" removed=");
    sb.append("'"+com.sforce.ws.util.Verbose.toString(removed)+"'\n");
    sb.append(" timestamp=");
    sb.append("'"+com.sforce.ws.util.Verbose.toString(timestamp)+"'\n");
    sb.append(" token=");
    sb.append("'"+com.sforce.ws.util.Verbose.toString(token)+"'\n");
    sb.append(" updates=");
    sb.append("'"+com.sforce.ws.util.Verbose.toString(updates)+"'\n");
    sb.append("]\n");
    return sb.toString();
  }
}