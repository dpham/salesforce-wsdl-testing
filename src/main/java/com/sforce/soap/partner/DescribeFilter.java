package com.sforce.soap.partner;

/**
 * Generated by ComplexTypeGenerator.java. Please do not edit.
 */
public class DescribeFilter implements com.sforce.ws.bind.XMLizable {

  /**
   * Constructor
   */
  public DescribeFilter() {
  }
    
  
  /**
   * element  : column of type {http://www.w3.org/2001/XMLSchema}string
   * java type: java.lang.String
   */
  private static final com.sforce.ws.bind.TypeInfo column__typeInfo =
    new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","column","http://www.w3.org/2001/XMLSchema","string",1,1,true);

  private boolean column__is_set = false;

  private java.lang.String column;

  public java.lang.String getColumn() {
    return column;
  }

  

  public void setColumn(java.lang.String column) {
    this.column = column;
    column__is_set = true;
  }
  
  /**
   * element  : negated of type {http://www.w3.org/2001/XMLSchema}boolean
   * java type: boolean
   */
  private static final com.sforce.ws.bind.TypeInfo negated__typeInfo =
    new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","negated","http://www.w3.org/2001/XMLSchema","boolean",1,1,true);

  private boolean negated__is_set = false;

  private boolean negated;

  public boolean getNegated() {
    return negated;
  }

  

  public boolean isNegated() {
    return negated;
  }

  

  public void setNegated(boolean negated) {
    this.negated = negated;
    negated__is_set = true;
  }
  
  /**
   * element  : operator of type {http://www.w3.org/2001/XMLSchema}string
   * java type: java.lang.String
   */
  private static final com.sforce.ws.bind.TypeInfo operator__typeInfo =
    new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","operator","http://www.w3.org/2001/XMLSchema","string",1,1,true);

  private boolean operator__is_set = false;

  private java.lang.String operator;

  public java.lang.String getOperator() {
    return operator;
  }

  

  public void setOperator(java.lang.String operator) {
    this.operator = operator;
    operator__is_set = true;
  }
  
  /**
   * element  : value of type {http://www.w3.org/2001/XMLSchema}string
   * java type: java.lang.String[]
   */
  private static final com.sforce.ws.bind.TypeInfo value__typeInfo =
    new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","value","http://www.w3.org/2001/XMLSchema","string",0,-1,true);

  private boolean value__is_set = false;

  private java.lang.String[] value = new java.lang.String[0];

  public java.lang.String[] getValue() {
    return value;
  }

  

  public void setValue(java.lang.String[] value) {
    this.value = value;
    value__is_set = true;
  }
  
  /**
   * element  : valueSeparator of type {http://www.w3.org/2001/XMLSchema}string
   * java type: java.lang.String
   */
  private static final com.sforce.ws.bind.TypeInfo valueSeparator__typeInfo =
    new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","valueSeparator","http://www.w3.org/2001/XMLSchema","string",1,1,true);

  private boolean valueSeparator__is_set = false;

  private java.lang.String valueSeparator;

  public java.lang.String getValueSeparator() {
    return valueSeparator;
  }

  

  public void setValueSeparator(java.lang.String valueSeparator) {
    this.valueSeparator = valueSeparator;
    valueSeparator__is_set = true;
  }
  

  /**
   */
  public void write(javax.xml.namespace.QName __element,
      com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
      throws java.io.IOException {
    __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
    
    writeFields(__out, __typeMapper);
    __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
  }

  protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
      com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
   
    __typeMapper.writeString(__out, column__typeInfo, column, column__is_set);
    __typeMapper.writeBoolean(__out, negated__typeInfo, negated, negated__is_set);
    __typeMapper.writeString(__out, operator__typeInfo, operator, operator__is_set);
    __typeMapper.writeObject(__out, value__typeInfo, value, value__is_set);
    __typeMapper.writeString(__out, valueSeparator__typeInfo, valueSeparator, valueSeparator__is_set);
  }


  public void load(com.sforce.ws.parser.XmlInputStream __in,
      com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
    __typeMapper.consumeStartTag(__in);
    loadFields(__in, __typeMapper);
    __typeMapper.consumeEndTag(__in);
  }

  protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
      com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
   
    __in.peekTag();
    if (__typeMapper.verifyElement(__in, column__typeInfo)) {
      setColumn((java.lang.String)__typeMapper.readString(__in, column__typeInfo, java.lang.String.class));
    }
    __in.peekTag();
    if (__typeMapper.verifyElement(__in, negated__typeInfo)) {
      setNegated((boolean)__typeMapper.readBoolean(__in, negated__typeInfo, boolean.class));
    }
    __in.peekTag();
    if (__typeMapper.verifyElement(__in, operator__typeInfo)) {
      setOperator((java.lang.String)__typeMapper.readString(__in, operator__typeInfo, java.lang.String.class));
    }
    __in.peekTag();
    if (__typeMapper.isElement(__in, value__typeInfo)) {
      setValue((java.lang.String[])__typeMapper.readObject(__in, value__typeInfo, java.lang.String[].class));
    }
    __in.peekTag();
    if (__typeMapper.verifyElement(__in, valueSeparator__typeInfo)) {
      setValueSeparator((java.lang.String)__typeMapper.readString(__in, valueSeparator__typeInfo, java.lang.String.class));
    }
  }

  public String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder();
    sb.append("[DescribeFilter ");
    
    sb.append(" column=");
    sb.append("'"+com.sforce.ws.util.Verbose.toString(column)+"'\n");
    sb.append(" negated=");
    sb.append("'"+com.sforce.ws.util.Verbose.toString(negated)+"'\n");
    sb.append(" operator=");
    sb.append("'"+com.sforce.ws.util.Verbose.toString(operator)+"'\n");
    sb.append(" value=");
    sb.append("'"+com.sforce.ws.util.Verbose.toString(value)+"'\n");
    sb.append(" valueSeparator=");
    sb.append("'"+com.sforce.ws.util.Verbose.toString(valueSeparator)+"'\n");
    sb.append("]\n");
    return sb.toString();
  }
}