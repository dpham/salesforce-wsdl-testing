package com.sforce.soap.partner;

/**
 * Generated by ComplexTypeGenerator.java. Please do not edit.
 */
public class EmailSyncFieldMapping implements com.sforce.ws.bind.XMLizable {

  /**
   * Constructor
   */
  public EmailSyncFieldMapping() {
  }
    
  
  /**
   * element  : clientName of type {http://www.w3.org/2001/XMLSchema}string
   * java type: java.lang.String
   */
  private static final com.sforce.ws.bind.TypeInfo clientName__typeInfo =
    new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","clientName","http://www.w3.org/2001/XMLSchema","string",1,1,true);

  private boolean clientName__is_set = false;

  private java.lang.String clientName;

  public java.lang.String getClientName() {
    return clientName;
  }

  

  public void setClientName(java.lang.String clientName) {
    this.clientName = clientName;
    clientName__is_set = true;
  }
  
  /**
   * element  : clientType of type {urn:partner.soap.sforce.com}EmailSyncClientFieldType
   * java type: com.sforce.soap.partner.EmailSyncClientFieldType
   */
  private static final com.sforce.ws.bind.TypeInfo clientType__typeInfo =
    new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","clientType","urn:partner.soap.sforce.com","EmailSyncClientFieldType",1,1,true);

  private boolean clientType__is_set = false;

  private com.sforce.soap.partner.EmailSyncClientFieldType clientType;

  public com.sforce.soap.partner.EmailSyncClientFieldType getClientType() {
    return clientType;
  }

  

  public void setClientType(com.sforce.soap.partner.EmailSyncClientFieldType clientType) {
    this.clientType = clientType;
    clientType__is_set = true;
  }
  
  /**
   * element  : name of type {http://www.w3.org/2001/XMLSchema}string
   * java type: java.lang.String
   */
  private static final com.sforce.ws.bind.TypeInfo name__typeInfo =
    new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","name","http://www.w3.org/2001/XMLSchema","string",1,1,true);

  private boolean name__is_set = false;

  private java.lang.String name;

  public java.lang.String getName() {
    return name;
  }

  

  public void setName(java.lang.String name) {
    this.name = name;
    name__is_set = true;
  }
  
  /**
   * element  : type of type {urn:partner.soap.sforce.com}fieldType
   * java type: com.sforce.soap.partner.FieldType
   */
  private static final com.sforce.ws.bind.TypeInfo type__typeInfo =
    new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","type","urn:partner.soap.sforce.com","fieldType",1,1,true);

  private boolean type__is_set = false;

  private com.sforce.soap.partner.FieldType type;

  public com.sforce.soap.partner.FieldType getType() {
    return type;
  }

  

  public void setType(com.sforce.soap.partner.FieldType type) {
    this.type = type;
    type__is_set = true;
  }
  
  /**
   * element  : usedForMatching of type {http://www.w3.org/2001/XMLSchema}boolean
   * java type: boolean
   */
  private static final com.sforce.ws.bind.TypeInfo usedForMatching__typeInfo =
    new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","usedForMatching","http://www.w3.org/2001/XMLSchema","boolean",1,1,true);

  private boolean usedForMatching__is_set = false;

  private boolean usedForMatching;

  public boolean getUsedForMatching() {
    return usedForMatching;
  }

  

  public boolean isUsedForMatching() {
    return usedForMatching;
  }

  

  public void setUsedForMatching(boolean usedForMatching) {
    this.usedForMatching = usedForMatching;
    usedForMatching__is_set = true;
  }
  
  /**
   * element  : valueMapping of type {urn:partner.soap.sforce.com}EmailSyncFieldValueMapping
   * java type: com.sforce.soap.partner.EmailSyncFieldValueMapping[]
   */
  private static final com.sforce.ws.bind.TypeInfo valueMapping__typeInfo =
    new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","valueMapping","urn:partner.soap.sforce.com","EmailSyncFieldValueMapping",0,-1,true);

  private boolean valueMapping__is_set = false;

  private com.sforce.soap.partner.EmailSyncFieldValueMapping[] valueMapping = new com.sforce.soap.partner.EmailSyncFieldValueMapping[0];

  public com.sforce.soap.partner.EmailSyncFieldValueMapping[] getValueMapping() {
    return valueMapping;
  }

  

  public void setValueMapping(com.sforce.soap.partner.EmailSyncFieldValueMapping[] valueMapping) {
    this.valueMapping = valueMapping;
    valueMapping__is_set = true;
  }
  

  /**
   */
  public void write(javax.xml.namespace.QName __element,
      com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
      throws java.io.IOException {
    __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
    
    writeFields(__out, __typeMapper);
    __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
  }

  protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
      com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
   
    __typeMapper.writeString(__out, clientName__typeInfo, clientName, clientName__is_set);
    __typeMapper.writeObject(__out, clientType__typeInfo, clientType, clientType__is_set);
    __typeMapper.writeString(__out, name__typeInfo, name, name__is_set);
    __typeMapper.writeObject(__out, type__typeInfo, type, type__is_set);
    __typeMapper.writeBoolean(__out, usedForMatching__typeInfo, usedForMatching, usedForMatching__is_set);
    __typeMapper.writeObject(__out, valueMapping__typeInfo, valueMapping, valueMapping__is_set);
  }


  public void load(com.sforce.ws.parser.XmlInputStream __in,
      com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
    __typeMapper.consumeStartTag(__in);
    loadFields(__in, __typeMapper);
    __typeMapper.consumeEndTag(__in);
  }

  protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
      com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
   
    __in.peekTag();
    if (__typeMapper.verifyElement(__in, clientName__typeInfo)) {
      setClientName((java.lang.String)__typeMapper.readString(__in, clientName__typeInfo, java.lang.String.class));
    }
    __in.peekTag();
    if (__typeMapper.verifyElement(__in, clientType__typeInfo)) {
      setClientType((com.sforce.soap.partner.EmailSyncClientFieldType)__typeMapper.readObject(__in, clientType__typeInfo, com.sforce.soap.partner.EmailSyncClientFieldType.class));
    }
    __in.peekTag();
    if (__typeMapper.verifyElement(__in, name__typeInfo)) {
      setName((java.lang.String)__typeMapper.readString(__in, name__typeInfo, java.lang.String.class));
    }
    __in.peekTag();
    if (__typeMapper.verifyElement(__in, type__typeInfo)) {
      setType((com.sforce.soap.partner.FieldType)__typeMapper.readObject(__in, type__typeInfo, com.sforce.soap.partner.FieldType.class));
    }
    __in.peekTag();
    if (__typeMapper.verifyElement(__in, usedForMatching__typeInfo)) {
      setUsedForMatching((boolean)__typeMapper.readBoolean(__in, usedForMatching__typeInfo, boolean.class));
    }
    __in.peekTag();
    if (__typeMapper.isElement(__in, valueMapping__typeInfo)) {
      setValueMapping((com.sforce.soap.partner.EmailSyncFieldValueMapping[])__typeMapper.readObject(__in, valueMapping__typeInfo, com.sforce.soap.partner.EmailSyncFieldValueMapping[].class));
    }
  }

  public String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder();
    sb.append("[EmailSyncFieldMapping ");
    
    sb.append(" clientName=");
    sb.append("'"+com.sforce.ws.util.Verbose.toString(clientName)+"'\n");
    sb.append(" clientType=");
    sb.append("'"+com.sforce.ws.util.Verbose.toString(clientType)+"'\n");
    sb.append(" name=");
    sb.append("'"+com.sforce.ws.util.Verbose.toString(name)+"'\n");
    sb.append(" type=");
    sb.append("'"+com.sforce.ws.util.Verbose.toString(type)+"'\n");
    sb.append(" usedForMatching=");
    sb.append("'"+com.sforce.ws.util.Verbose.toString(usedForMatching)+"'\n");
    sb.append(" valueMapping=");
    sb.append("'"+com.sforce.ws.util.Verbose.toString(valueMapping)+"'\n");
    sb.append("]\n");
    return sb.toString();
  }
}