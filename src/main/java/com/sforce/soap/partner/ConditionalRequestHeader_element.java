package com.sforce.soap.partner;

/**
 * Generated by ComplexTypeGenerator.java. Please do not edit.
 */
public class ConditionalRequestHeader_element extends com.sforce.ws.bind.SoapHeaderObject implements com.sforce.ws.bind.XMLizable {

  /**
   * Constructor
   */
  public ConditionalRequestHeader_element() {
  }
    
  
  /**
   * element  : ifModifiedBefore of type {http://www.w3.org/2001/XMLSchema}dateTime
   * java type: java.util.Calendar
   */
  private static final com.sforce.ws.bind.TypeInfo ifModifiedBefore__typeInfo =
    new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","ifModifiedBefore","http://www.w3.org/2001/XMLSchema","dateTime",1,1,true);

  private boolean ifModifiedBefore__is_set = false;

  private java.util.Calendar ifModifiedBefore;

  public java.util.Calendar getIfModifiedBefore() {
    return ifModifiedBefore;
  }

  

  public void setIfModifiedBefore(java.util.Calendar ifModifiedBefore) {
    this.ifModifiedBefore = ifModifiedBefore;
    ifModifiedBefore__is_set = true;
  }
  
  /**
   * element  : ifModifiedSince of type {http://www.w3.org/2001/XMLSchema}dateTime
   * java type: java.util.Calendar
   */
  private static final com.sforce.ws.bind.TypeInfo ifModifiedSince__typeInfo =
    new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","ifModifiedSince","http://www.w3.org/2001/XMLSchema","dateTime",1,1,true);

  private boolean ifModifiedSince__is_set = false;

  private java.util.Calendar ifModifiedSince;

  public java.util.Calendar getIfModifiedSince() {
    return ifModifiedSince;
  }

  

  public void setIfModifiedSince(java.util.Calendar ifModifiedSince) {
    this.ifModifiedSince = ifModifiedSince;
    ifModifiedSince__is_set = true;
  }
  
  /**
   * element  : ifModifiedBeforeArray of type {http://www.w3.org/2001/XMLSchema}dateTime
   * java type: java.util.Calendar[]
   */
  private static final com.sforce.ws.bind.TypeInfo ifModifiedBeforeArray__typeInfo =
    new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","ifModifiedBeforeArray","http://www.w3.org/2001/XMLSchema","dateTime",0,-1,true);

  private boolean ifModifiedBeforeArray__is_set = false;

  private java.util.Calendar[] ifModifiedBeforeArray = new java.util.Calendar[0];

  public java.util.Calendar[] getIfModifiedBeforeArray() {
    return ifModifiedBeforeArray;
  }

  

  public void setIfModifiedBeforeArray(java.util.Calendar[] ifModifiedBeforeArray) {
    this.ifModifiedBeforeArray = ifModifiedBeforeArray;
    ifModifiedBeforeArray__is_set = true;
  }
  

  /**
   */
  public void write(javax.xml.namespace.QName __element,
      com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
      throws java.io.IOException {
    __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
    
    writeFields(__out, __typeMapper);
    __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
  }

  protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
      com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
   super.writeFields(__out, __typeMapper);
    __typeMapper.writeObject(__out, ifModifiedBefore__typeInfo, ifModifiedBefore, ifModifiedBefore__is_set);
    __typeMapper.writeObject(__out, ifModifiedSince__typeInfo, ifModifiedSince, ifModifiedSince__is_set);
    __typeMapper.writeObject(__out, ifModifiedBeforeArray__typeInfo, ifModifiedBeforeArray, ifModifiedBeforeArray__is_set);
  }


  public void load(com.sforce.ws.parser.XmlInputStream __in,
      com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
    __typeMapper.consumeStartTag(__in);
    loadFields(__in, __typeMapper);
    __typeMapper.consumeEndTag(__in);
  }

  protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
      com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
   super.loadFields(__in, __typeMapper);
    __in.peekTag();
    if (__typeMapper.verifyElement(__in, ifModifiedBefore__typeInfo)) {
      setIfModifiedBefore((java.util.Calendar)__typeMapper.readObject(__in, ifModifiedBefore__typeInfo, java.util.Calendar.class));
    }
    __in.peekTag();
    if (__typeMapper.verifyElement(__in, ifModifiedSince__typeInfo)) {
      setIfModifiedSince((java.util.Calendar)__typeMapper.readObject(__in, ifModifiedSince__typeInfo, java.util.Calendar.class));
    }
    __in.peekTag();
    if (__typeMapper.isElement(__in, ifModifiedBeforeArray__typeInfo)) {
      setIfModifiedBeforeArray((java.util.Calendar[])__typeMapper.readObject(__in, ifModifiedBeforeArray__typeInfo, java.util.Calendar[].class));
    }
  }

  public String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder();
    sb.append("[ConditionalRequestHeader_element ");
    sb.append(super.toString());
    sb.append(" ifModifiedBefore=");
    sb.append("'"+com.sforce.ws.util.Verbose.toString(ifModifiedBefore)+"'\n");
    sb.append(" ifModifiedSince=");
    sb.append("'"+com.sforce.ws.util.Verbose.toString(ifModifiedSince)+"'\n");
    sb.append(" ifModifiedBeforeArray=");
    sb.append("'"+com.sforce.ws.util.Verbose.toString(ifModifiedBeforeArray)+"'\n");
    sb.append("]\n");
    return sb.toString();
  }
}